---
interface Props {
	title?: string | undefined;
	description?: string | undefined;
}

const { title = 'AngelNext', description = 'The personal site of AngelNext' } = Astro.props;
---

<title>{title}</title>

<meta charset='UTF-8' />

<meta http-equiv='X-UA-Compatible' content='IE=edge' />
<meta name='viewport' content='width=device-width' />

<meta name='title' content={title} />
<meta name='description' content={description} />
<meta name='author' content='Angel G. Vazquez' />
<meta name='keywords' content='AngelNext, Portfolio, Developer, Programmer' />
<meta name='theme-color' content='#7611a6' />
<meta name='msapplication-TileColor' content='#7611a6' />

<meta property='og:type' content='website' />
<meta property='og:title' content={title} />
<meta property='og:description' content={description} />
<meta property='og:site_name' content='AngelNext' />
<meta property='og:url' content='https://angelnext.dev/' />
<meta property='og:image' content='https://angelnext.dev/banner.webp' />
<meta property='og:image:width' content='6912' />
<meta property='og:image:height' content='3456' />

<meta name='twitter:card' content='summary_large_image' />
<meta property='twitter:domain' content='angelnext.dev' />
<meta property='twitter:url' content='https://angelnext.dev/' />
<meta name='twitter:title' content='AngelNext' />
<meta name='twitter:description' content='The personal site of AngelNext' />
<meta name='twitter:image' content='https://angelnext.dev/banner.webp' />

<meta name='generator' content={Astro.generator} />

<link rel='icon' href='/angelnext-192x192.png' />
<link rel='apple-touch-icon' href='/angelnext-192x192.png' />
<link rel='mask-icon' href='/angelnext-512x512' color='#fff' />

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};

	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('theme-dark');

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('theme-dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
